# Generated by Django 4.2.7 on 2025-07-29 00:44

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='Business Name')),
                ('business_sector', models.CharField(choices=[('hospitality', 'Hospitality & Tourism'), ('construction', 'Construction & Real Estate'), ('logistics', 'Logistics & Transportation'), ('retail', 'Retail & E-commerce'), ('manufacturing', 'Manufacturing'), ('technology', 'Technology & Software'), ('finance', 'Finance & Banking'), ('healthcare', 'Healthcare'), ('education', 'Education'), ('other', 'Other')], max_length=50, verbose_name='Industry')),
                ('employee_size', models.CharField(blank=True, choices=[('1-10', '1-10 employees'), ('11-50', '11-50 employees'), ('51-200', '51-200 employees'), ('201-500', '201-500 employees'), ('500+', '500+ employees')], max_length=20, null=True, verbose_name='Number of Employees')),
                ('main_location', models.CharField(default='Dubai, UAE', max_length=255, verbose_name='Main Location')),
                ('emirate', models.CharField(blank=True, choices=[('abu-dhabi', 'Abu Dhabi'), ('dubai', 'Dubai'), ('sharjah', 'Sharjah'), ('ajman', 'Ajman'), ('umm-al-quwain', 'Umm Al Quwain'), ('ras-al-khaimah', 'Ras Al Khaimah'), ('fujairah', 'Fujairah')], max_length=50, null=True, verbose_name='Emirates Location')),
                ('license_type', models.CharField(blank=True, choices=[('commercial', 'Commercial'), ('professional', 'Professional'), ('industrial', 'Industrial'), ('tourism', 'Tourism'), ('free-zone', 'Free Zone')], max_length=50, null=True, verbose_name='Business License Type')),
                ('esg_scoping_completed', models.BooleanField(default=False)),
                ('onboarding_completed', models.BooleanField(default=False)),
                ('setup_step', models.IntegerField(default=1)),
                ('scoping_data', models.JSONField(blank=True, default=dict, help_text='ESG scoping questionnaire responses')),
                ('overall_esg_score', models.FloatField(default=0.0)),
                ('environmental_score', models.FloatField(default=0.0)),
                ('social_score', models.FloatField(default=0.0)),
                ('governance_score', models.FloatField(default=0.0)),
                ('data_completion_percentage', models.FloatField(default=0.0)),
                ('evidence_completion_percentage', models.FloatField(default=0.0)),
                ('total_fields', models.IntegerField(default=0)),
                ('completed_fields', models.IntegerField(default=0)),
                ('total_evidence_files', models.IntegerField(default=0)),
                ('uploaded_evidence_files', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Company',
                'verbose_name_plural': 'Companies',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='Location Name')),
                ('address', models.TextField(verbose_name='Full Address')),
                ('emirate', models.CharField(choices=[('abu-dhabi', 'Abu Dhabi'), ('dubai', 'Dubai'), ('sharjah', 'Sharjah'), ('ajman', 'Ajman'), ('umm-al-quwain', 'Umm Al Quwain'), ('ras-al-khaimah', 'Ras Al Khaimah'), ('fujairah', 'Fujairah')], max_length=50, verbose_name='Emirate')),
                ('total_floor_area', models.FloatField(blank=True, help_text='Total floor area in square meters', null=True)),
                ('number_of_floors', models.IntegerField(blank=True, null=True)),
                ('building_type', models.CharField(blank=True, choices=[('office', 'Office Building'), ('retail', 'Retail Space'), ('warehouse', 'Warehouse'), ('manufacturing', 'Manufacturing Facility'), ('hotel', 'Hotel'), ('restaurant', 'Restaurant'), ('mixed', 'Mixed Use'), ('other', 'Other')], max_length=50, null=True)),
                ('ownership_type', models.CharField(blank=True, choices=[('owned', 'Owned'), ('leased', 'Leased'), ('managed', 'Managed')], max_length=20, null=True)),
                ('operating_hours', models.CharField(blank=True, help_text='e.g., 8:00 AM - 6:00 PM', max_length=100)),
                ('number_of_employees', models.IntegerField(blank=True, null=True)),
                ('has_separate_meters', models.BooleanField(default=False)),
                ('meters_info', models.JSONField(blank=True, default=list, help_text='Information about utility meters (electricity, water, gas)')),
                ('is_primary', models.BooleanField(default=False, help_text='Primary location for ESG reporting')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='companies.company')),
            ],
            options={
                'verbose_name': 'Location',
                'verbose_name_plural': 'Locations',
                'ordering': ['-is_primary', 'name'],
            },
        ),
        migrations.CreateModel(
            name='CompanySettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_report_frequency', models.CharField(choices=[('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('semi-annual', 'Semi-Annual'), ('annual', 'Annual')], default='quarterly', max_length=20)),
                ('email_notifications', models.BooleanField(default=True)),
                ('task_reminders', models.BooleanField(default=True)),
                ('report_reminders', models.BooleanField(default=True)),
                ('active_frameworks', models.JSONField(default=list, help_text='List of active ESG frameworks')),
                ('targets', models.JSONField(default=dict, help_text='Company ESG targets and goals')),
                ('custom_fields', models.JSONField(default=dict, help_text='Company-specific custom fields')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to='companies.company')),
            ],
            options={
                'verbose_name': 'Company Settings',
                'verbose_name_plural': 'Company Settings',
            },
        ),
        migrations.CreateModel(
            name='CompanyInvitation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254)),
                ('role', models.CharField(choices=[('admin', 'Administrator'), ('manager', 'ESG Manager'), ('contributor', 'Contributor'), ('viewer', 'Viewer')], default='contributor', max_length=20)),
                ('message', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('declined', 'Declined'), ('expired', 'Expired')], default='pending', max_length=20)),
                ('token', models.CharField(max_length=255, unique=True)),
                ('expires_at', models.DateTimeField()),
                ('accepted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('accepted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='company_accepted_invitations', to=settings.AUTH_USER_MODEL)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitations', to='companies.company')),
                ('invited_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_sent_invitations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Company Invitation',
                'verbose_name_plural': 'Company Invitations',
                'ordering': ['-created_at'],
                'unique_together': {('company', 'email')},
            },
        ),
    ]
