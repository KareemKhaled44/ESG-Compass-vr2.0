# Generated by Django 4.2.7 on 2025-07-29 00:44

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('companies', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ESGAssessment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('assessment_period_start', models.DateField()),
                ('assessment_period_end', models.DateField()),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('under_review', 'Under Review'), ('approved', 'Approved')], default='draft', max_length=20)),
                ('progress_percentage', models.FloatField(default=0.0)),
                ('overall_score', models.FloatField(default=0.0)),
                ('environmental_score', models.FloatField(default=0.0)),
                ('social_score', models.FloatField(default=0.0)),
                ('governance_score', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessments', to='companies.company')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_assessments', to=settings.AUTH_USER_MODEL)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_assessments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ESG Assessment',
                'verbose_name_plural': 'ESG Assessments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ESGCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(choices=[('environmental', 'Environmental'), ('social', 'Social'), ('governance', 'Governance')], max_length=50, unique=True)),
                ('display_name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('icon', models.CharField(default='fa-solid fa-chart-line', max_length=50)),
                ('color', models.CharField(default='#2EC57D', max_length=20)),
                ('order', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'ESG Category',
                'verbose_name_plural': 'ESG Categories',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ESGFramework',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('display_name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('version', models.CharField(blank=True, max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('organization', models.CharField(blank=True, max_length=255)),
                ('website', models.URLField(blank=True)),
                ('documentation_url', models.URLField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'ESG Framework',
                'verbose_name_plural': 'ESG Frameworks',
                'ordering': ['display_name'],
            },
        ),
        migrations.CreateModel(
            name='ESGQuestion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('question_text', models.TextField(verbose_name='Question')),
                ('question_type', models.CharField(choices=[('yes_no', 'Yes/No'), ('multiple_choice', 'Multiple Choice'), ('text', 'Text Input'), ('number', 'Number Input'), ('date', 'Date Input'), ('file_upload', 'File Upload'), ('rating', 'Rating Scale')], max_length=20)),
                ('help_text', models.TextField(blank=True)),
                ('placeholder', models.CharField(blank=True, max_length=255)),
                ('is_required', models.BooleanField(default=False)),
                ('priority', models.CharField(choices=[('required', 'Required'), ('recommended', 'Recommended'), ('optional', 'Optional')], default='recommended', max_length=20)),
                ('order', models.IntegerField(default=0)),
                ('applicable_sectors', models.JSONField(default=list, help_text='List of business sectors this question applies to')),
                ('validation_rules', models.JSONField(blank=True, default=dict, help_text='Validation rules for the question (min, max, pattern, etc.)')),
                ('options', models.JSONField(blank=True, default=list, help_text='Options for multiple choice questions')),
                ('weight', models.FloatField(default=1.0, help_text='Weight of this question in category scoring')),
                ('scoring_criteria', models.JSONField(blank=True, default=dict, help_text='Scoring criteria for different answers')),
                ('compliance_context', models.TextField(blank=True, help_text='Why this question is important for compliance')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='esg_assessment.esgcategory')),
                ('frameworks', models.ManyToManyField(blank=True, related_name='questions', to='esg_assessment.esgframework')),
            ],
            options={
                'verbose_name': 'ESG Question',
                'verbose_name_plural': 'ESG Questions',
                'ordering': ['category', 'subcategory', 'order'],
            },
        ),
        migrations.CreateModel(
            name='ESGSubcategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('display_name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('order', models.IntegerField(default=0)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='esg_assessment.esgcategory')),
            ],
            options={
                'verbose_name': 'ESG Subcategory',
                'verbose_name_plural': 'ESG Subcategories',
                'ordering': ['category', 'order', 'name'],
                'unique_together': {('category', 'name')},
            },
        ),
        migrations.CreateModel(
            name='ESGResponse',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('response_data', models.JSONField(help_text='The actual response data')),
                ('confidence_level', models.IntegerField(default=5, help_text='Confidence level from 1-10')),
                ('notes', models.TextField(blank=True)),
                ('has_evidence', models.BooleanField(default=False)),
                ('evidence_description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('answered_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='esg_assessment.esgassessment')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='esg_assessment.esgquestion')),
            ],
            options={
                'verbose_name': 'ESG Response',
                'verbose_name_plural': 'ESG Responses',
                'ordering': ['-updated_at'],
                'unique_together': {('assessment', 'question')},
            },
        ),
        migrations.AddField(
            model_name='esgquestion',
            name='subcategory',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='esg_assessment.esgsubcategory'),
        ),
        migrations.CreateModel(
            name='ESGEvidence',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file', models.FileField(upload_to='esg_evidence/')),
                ('original_filename', models.CharField(max_length=255)),
                ('file_size', models.BigIntegerField()),
                ('mime_type', models.CharField(max_length=100)),
                ('title', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('response', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evidence_files', to='esg_assessment.esgresponse')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ESG Evidence',
                'verbose_name_plural': 'ESG Evidence',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.AddField(
            model_name='esgassessment',
            name='target_frameworks',
            field=models.ManyToManyField(blank=True, related_name='assessments', to='esg_assessment.esgframework'),
        ),
        migrations.CreateModel(
            name='SectorQuestionMapping',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('sector', models.CharField(choices=[('hospitality', 'Hospitality & Tourism'), ('construction', 'Construction & Real Estate'), ('logistics', 'Logistics & Transportation'), ('retail', 'Retail & E-commerce'), ('manufacturing', 'Manufacturing'), ('technology', 'Technology & Software'), ('finance', 'Finance & Banking'), ('healthcare', 'Healthcare'), ('education', 'Education'), ('other', 'Other')], max_length=50)),
                ('is_required', models.BooleanField(default=False)),
                ('priority', models.IntegerField(default=1)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sector_mappings', to='esg_assessment.esgquestion')),
            ],
            options={
                'verbose_name': 'Sector Question Mapping',
                'verbose_name_plural': 'Sector Question Mappings',
                'ordering': ['sector', 'priority'],
                'unique_together': {('sector', 'question')},
            },
        ),
    ]
