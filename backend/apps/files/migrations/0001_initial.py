# Generated by Django 4.2.7 on 2025-08-12 23:13

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tasks', '0002_task_external_id_task_framework_tags_task_sector'),
    ]

    operations = [
        migrations.CreateModel(
            name='ExtractedFileData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('extraction_date', models.DateTimeField(auto_now_add=True)),
                ('extraction_method', models.CharField(max_length=50)),
                ('confidence_score', models.FloatField(default=0.0)),
                ('extracted_json', models.JSONField(default=dict)),
                ('energy_consumption_kwh', models.FloatField(blank=True, null=True)),
                ('water_usage_liters', models.FloatField(blank=True, null=True)),
                ('waste_generated_kg', models.FloatField(blank=True, null=True)),
                ('carbon_emissions_tco2', models.FloatField(blank=True, null=True)),
                ('renewable_energy_percentage', models.FloatField(blank=True, null=True)),
                ('total_employees', models.IntegerField(blank=True, null=True)),
                ('training_hours', models.FloatField(blank=True, null=True)),
                ('safety_incidents', models.IntegerField(blank=True, null=True)),
                ('employee_satisfaction_score', models.FloatField(blank=True, null=True)),
                ('compliance_score', models.FloatField(blank=True, null=True)),
                ('board_meetings', models.IntegerField(blank=True, null=True)),
                ('processing_status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('task_attachment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='extracted_data', to='tasks.taskattachment')),
            ],
            options={
                'verbose_name': 'Extracted File Data',
                'verbose_name_plural': 'Extracted File Data',
                'indexes': [models.Index(fields=['task_attachment', 'processing_status'], name='files_extra_task_at_79e37a_idx')],
            },
        ),
    ]
