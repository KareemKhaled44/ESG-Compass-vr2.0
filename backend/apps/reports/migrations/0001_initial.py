# Generated by Django 4.2.7 on 2025-07-29 00:44

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('companies', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GeneratedReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('format', models.CharField(choices=[('pdf', 'PDF'), ('xlsx', 'Excel'), ('csv', 'CSV'), ('json', 'JSON'), ('xml', 'XML')], max_length=10)),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('parameters', models.JSONField(default=dict, help_text='Report generation parameters and filters')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('generating', 'Generating'), ('completed', 'Completed'), ('failed', 'Failed'), ('expired', 'Expired')], default='pending', max_length=20)),
                ('progress_percentage', models.FloatField(default=0.0)),
                ('error_message', models.TextField(blank=True)),
                ('file', models.FileField(blank=True, null=True, upload_to='generated_reports/')),
                ('file_size', models.BigIntegerField(blank=True, null=True)),
                ('generation_time_seconds', models.FloatField(blank=True, null=True)),
                ('data_completeness', models.JSONField(default=dict, help_text='Data completeness metrics at generation time')),
                ('is_shared', models.BooleanField(default=False)),
                ('shared_with', models.JSONField(default=list, help_text='List of user IDs or email addresses shared with')),
                ('access_token', models.CharField(blank=True, max_length=255, unique=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generated_reports', to='companies.company')),
                ('generated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generated_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Generated Report',
                'verbose_name_plural': 'Generated Reports',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReportTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('display_name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('report_type', models.CharField(choices=[('esg_comprehensive', 'ESG Comprehensive Report'), ('dst_compliance', 'Dubai Sustainable Tourism'), ('green_key', 'Green Key Certification'), ('custom_export', 'Custom Export'), ('quarterly_summary', 'Quarterly Summary'), ('compliance_tracker', 'UAE Compliance Tracker'), ('annual_report', 'Annual ESG Report'), ('benchmark_analysis', 'Benchmark Analysis')], max_length=50)),
                ('template_config', models.JSONField(default=dict, help_text='Template configuration and layout settings')),
                ('required_frameworks', models.JSONField(default=list, help_text='Required ESG frameworks for this report')),
                ('required_categories', models.JSONField(default=list, help_text='Required ESG categories (environmental, social, governance)')),
                ('supported_formats', models.JSONField(default=list, help_text='Supported output formats')),
                ('compliance_standards', models.JSONField(default=list, help_text='Compliance standards this report addresses')),
                ('applicable_sectors', models.JSONField(default=list, help_text='Business sectors this template applies to')),
                ('is_framework_official', models.BooleanField(default=False, help_text='Is this an official framework template?')),
                ('requires_verification', models.BooleanField(default=False, help_text='Does this report require third-party verification?')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('draft', 'Draft')], default='active', max_length=20)),
                ('version', models.CharField(default='1.0', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Report Template',
                'verbose_name_plural': 'Report Templates',
                'ordering': ['report_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ReportSchedule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('frequency', models.CharField(choices=[('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('semi_annual', 'Semi-Annual'), ('annual', 'Annual')], max_length=20)),
                ('recipients', models.JSONField(default=list, help_text='List of email addresses to send reports to')),
                ('is_active', models.BooleanField(default=True)),
                ('next_run', models.DateTimeField()),
                ('last_run', models.DateTimeField(blank=True, null=True)),
                ('parameters', models.JSONField(default=dict, help_text='Default parameters for scheduled generation')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='report_schedules', to='companies.company')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='reports.reporttemplate')),
            ],
            options={
                'verbose_name': 'Report Schedule',
                'verbose_name_plural': 'Report Schedules',
                'ordering': ['company', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ReportAccess',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('access_type', models.CharField(choices=[('view', 'Viewed'), ('download', 'Downloaded'), ('share', 'Shared')], max_length=20)),
                ('accessed_at', models.DateTimeField(auto_now_add=True)),
                ('accessed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='access_logs', to='reports.generatedreport')),
            ],
            options={
                'verbose_name': 'Report Access',
                'verbose_name_plural': 'Report Access Logs',
                'ordering': ['-accessed_at'],
            },
        ),
        migrations.AddField(
            model_name='generatedreport',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generated_reports', to='reports.reporttemplate'),
        ),
        migrations.CreateModel(
            name='ReportSection',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('section_type', models.CharField(choices=[('cover', 'Cover Page'), ('executive_summary', 'Executive Summary'), ('methodology', 'Methodology'), ('environmental', 'Environmental Metrics'), ('social', 'Social Metrics'), ('governance', 'Governance Metrics'), ('compliance', 'Compliance Status'), ('recommendations', 'Recommendations'), ('appendix', 'Appendix'), ('custom', 'Custom Section')], max_length=50)),
                ('layout_config', models.JSONField(default=dict, help_text='Section layout and styling configuration')),
                ('required_data', models.JSONField(default=list, help_text='Required data fields for this section')),
                ('order', models.IntegerField(default=0)),
                ('is_required', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='reports.reporttemplate')),
            ],
            options={
                'verbose_name': 'Report Section',
                'verbose_name_plural': 'Report Sections',
                'ordering': ['template', 'order'],
                'unique_together': {('template', 'name')},
            },
        ),
        migrations.AddIndex(
            model_name='generatedreport',
            index=models.Index(fields=['company', 'status'], name='reports_gen_company_aa5bb9_idx'),
        ),
        migrations.AddIndex(
            model_name='generatedreport',
            index=models.Index(fields=['template', 'created_at'], name='reports_gen_templat_b3931a_idx'),
        ),
    ]
